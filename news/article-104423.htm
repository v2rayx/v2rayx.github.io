<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2rayx.github.io/news/article-104423.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- SEO Meta Tags -->
    <!-- OG Meta Tags to improve the way the post looks when you share the page on Facebook, Twitter, LinkedIn -->
    <meta property="og:site_name" content="" /> <!-- website name -->
    <meta property="og:site" content="" /> <!-- website link -->
    <meta property="og:title" content="" /> <!-- title shown in the actual shared post -->
    <meta property="og:description" content="" /> <!-- description shown in the actual shared post -->
    <meta property="og:image" content="" /> <!-- image link, make sure it's jpg -->
    <meta property="og:url" content="" /> <!-- where do you want your post to link to -->
    <meta name="twitter:card" content="summary_large_image"> <!-- to have large image post format in Twitter -->
    <title>简单几步实现滑动验证码（后端验证）</title>
        <meta name="description" content="介绍 LazySlideCaptcha是基于.Net Standard 2.1的滑动验证码模块。项目同时提供一个基于vue2的演示前端组件和背景图裁剪工具。【码云地址】 |【Github 地址】 图形" />
        <link rel="icon" href="/assets/website/img/v2rayx/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2ray X节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2rayx.github.io/news/article-104423.htm" />
    <meta property="og:site_name" content="V2ray X节点订阅官网" />
    <meta property="og:title" content="简单几步实现滑动验证码（后端验证）" />
    <meta property="og:image" content="https://v2rayx.github.io/uploads/20240905/f7b7027d26f62eaba933e681e8609f79.webp" />
        <meta property="og:release_date" content="2025-04-26T07:38:36" />
    <meta property="og:updated_time" content="2025-04-26T07:38:36" />
        <meta property="og:description" content="介绍 LazySlideCaptcha是基于.Net Standard 2.1的滑动验证码模块。项目同时提供一个基于vue2的演示前端组件和背景图裁剪工具。【码云地址】 |【Github 地址】 图形" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="简单几步实现滑动验证码（后端验证）">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Styles -->
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,600;0,700;1,400&display=swap" rel="stylesheet">
    <link href="/assets/website/css/v2rayx/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2rayx/fontawesome-all.min.css" rel="stylesheet">
    <link href="/assets/website/css/v2rayx/swiper.css" rel="stylesheet">
    <link href="/assets/website/css/v2rayx/styles.css" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-SJTGCLQCTC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-SJTGCLQCTC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Navigation -->
    <nav id="navbar" class="navbar navbar-expand-lg fixed-top navbar-light" aria-label="Main navigation">
        <div class="container">
            <a class="navbar-brand logo-image" href="/">
                        <span>V2ray X</span>
                        </a>
            <!-- Text Logo - Use this if you don't have a graphic logo -->
            <!-- <a class="navbar-brand logo-text" href="index.html">Yavin</a> -->
            <button class="navbar-toggler p-0 border-0" type="button" id="navbarSideCollapse" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse offcanvas-collapse" id="navbarsExampleDefault">
                <ul class="navbar-nav ms-auto navbar-nav-scroll">
                                        <li class="nav-item">
                        <a class="nav-link" href="/">首页</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/free-nodes/">免费节点</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/client.htm">客户端</a>
                    </li>
                                        <li class="nav-item">
                        <a class="nav-link" href="/news/">新闻资讯</a>
                    </li>
                                    </ul>
            </div> <!-- end of navbar-collapse -->
        </div> <!-- end of container -->
    </nav> <!-- end of navbar -->
    <!-- end of navigation -->
    <!-- Header -->
    <header class="ex-header bg-gray">
        <div class="container">
            <div class="row">
                <div class="col-xl-10 offset-xl-1">
                    <h1>简单几步实现滑动验证码（后端验证）</h1>
                    <p>
                        <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                    </p>
                </div> <!-- end of col -->
            </div> <!-- end of row -->
        </div> <!-- end of container -->
    </header> <!-- end of ex-header -->
    <!-- end of header -->
    <!-- Details 1 -->
    <div id="details" class="basic-2">
        <img class="decoration-star" src="/assets/website/img/v2rayx/decoration-star.svg" alt="alternative">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				</h1> <h4 id="介绍">介绍</h4> <p>LazySlideCaptcha是基于.Net Standard 2.1的滑动验证码模块。项目同时提供一个基于vue2的演示前端组件和背景图裁剪工具。<br /><strong>【码云地址】 |【Github 地址】</strong></p> <p><strong>图形验证码请移步lazy-captcha。</strong></p> <p><strong>在线体验点这里</strong></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/49a6279656d52ce79e6929a72350f04f.jpg" alt="简单几步实现滑动验证码（后端验证）"></p> <h4 id="快速开始">快速开始</h4> <ol> <li>安装</li> </ol> <ul> <li>Package Manager</li> </ul> <pre><code class="language-powershell">Install-Package Lazy.SlideCaptcha.Core</code></pre> <ul> <li>.NET CLI</li> </ul> <pre><code class="language-powershell">dotnet add package Lazy.SlideCaptcha.Core</code></pre> <ol start="2"> <li>注册并配置服务</li> </ol> <pre><code class="language-c#">builder.Services.AddSlideCaptcha(builder.Configuration);  // 如果使用redis分布式缓存 //builder.Services.AddStackExchangeRedisCache(options =&gt; //{ //    options.Configuration = builder.Configuration.GetConnectionString("RedisCache"); //    options.InstanceName = "captcha:"; //});</code></pre> <pre><code class="language-json">"SlideCaptcha": {     "Backgrounds": [       {         "Type": "file",         "Data": "wwwroot/images/background/1.jpg"       },       {         "Type": "file",         "Data": "wwwroot/images/background/2.jpg"       }     ]   }</code></pre> <blockquote> <p>背景图片要求尺寸要求为<strong><em>552 X 344</em></strong> , 快速开始可在<strong><em>Demo</em></strong>  项目<strong><em>wwwroot/images/background</em></strong>  下挑选。（仅用作演示，生产请自行制作。）也可以通过裁剪工具制作，非常简单，上传图片，拖动范围后保存自动生成<em><strong>552 X 344</strong></em> 图片。</p> </blockquote> <ol start="3"> <li>接口定义</li> </ol> <pre><code class="language-c#">[Route("api/[controller]")] [ApiController] public class CaptchaController : ControllerBase {     private readonly ICaptcha _captcha;      public CaptchaController(ICaptcha captcha)     {         _captcha = captcha;     }      /// &lt;summary&gt;     /// id     /// &lt;/summary&gt;     /// &lt;param name="id"&gt;&lt;/param&gt;     /// &lt;returns&gt;&lt;/returns&gt;     [Route("gen")]     [HttpGet]     public CaptchaData Generate()     {         return _captcha.Generate();     }      /// &lt;summary&gt;     /// id     /// &lt;/summary&gt;     /// &lt;param name="id"&gt;&lt;/param&gt;     /// &lt;returns&gt;&lt;/returns&gt;     [Route("check")]     [HttpPost]     public bool Validate([FromQuery]string id, SlideTrack track)     {         return _captcha.Validate(id, track);     } }</code></pre> <p>至此后端Api服务已搭建完成。</p> <ol start="4"> <li>前端<br /> 前端提供演示组件lazy-slide-captcha，可通过npm安装。Demo项目为了演示方便直接采用script直接引入方式。</li> </ol> <pre><code class="language-html">@{     ViewData["Title"] = "滑动验证码"; }  &lt;link  href="~/lib/lazy-slide-captcha/dist/lazy-slide-captcha.css" asp-append-version="true" /&gt;  &lt;style&gt;     #app {         display: flex;         align-items: center;         justify-content: center;     }      .panel {         padding: 20px;         box-shadow: inherit;         border-radius: 6px;         box-shadow: 0 0 4px 0 #999999;         margin-top: 100px;     } &lt;/style&gt;  &lt;div id="app"&gt;     &lt;div class="panel"&gt;         &lt;lazy-slide-captcha ref="captcha" :width="width" :height="height" :show-refresh="true" :fail-tip="failTip" :success-tip="successTip" @@finish="handleFinish" @@refresh="generate"&gt;&lt;/lazy-slide-captcha&gt;     &lt;/div&gt; &lt;/div&gt;   @section Scripts{     &lt;script src="~/lib/vue/vue.min.js"&gt;&lt;/script&gt;     &lt;script src="~/lib/vue/axios.min.js"&gt;&lt;/script&gt;     &lt;script src="~/lib/lazy-slide-captcha/dist/lazy-slide-captcha.umd.js"&gt;&lt;/script&gt;      &lt;script&gt;         var app = new Vue({              el: '#app',              data(){                 return {                     requestId: undefined,                     failTip: '',                     successTip: '',                     // width，height保持与552 * 344同比例即可                     width: 340,                     height: 212                 }              },              mounted(){                  this.generate()              },              methods:{                  generate(){                      // 改变内部状态，标识生成请求开始                      this.$refs.captcha.startRequestGenerate()                       axios.get('/api/captcha/gen')                        .then((response) =&gt; {                            this.requestId = response.data.id                            // 改变内部状态，标识生成请求结束，同时设定background，slider图像                            this.$refs.captcha.endRequestGenerate(response.data.backgroundImage, response.data.sliderImage)                        })                        .catch((error) =&gt; {                            console.log(error);                            // 标识生成请求结束                            this.$refs.captcha.endRequestGenerate(null, null)                        });                  },                  handleFinish(data){                      // 改变内部状态，标识验证请求开始                      this.$refs.captcha.startRequestVerify()                       axios.post(`/api/captcha/check?id=${this.requestId}`, data)                        .then((response) =&gt; {                            let success = response.data.result === 0                            // 验证失败时显示信息                            this.failTip = response.data.result == 1 ? '验证未通过，拖动滑块将悬浮图像正确合并' : '验证超时, 请重新操作'                            // 验证通过时显示信息                            this.successTip = '验证通过，超过80%用户'                            // 改变内部状态，标识验证请求结束，同时设定是否成功状态                            this.$refs.captcha.endRequestVerify(success)                             if(!success){                                 setTimeout(() =&gt; {                                     this.generate()                                 }, 1000)                            }                        })                        .catch((error) =&gt; {                          console.log(error);                          this.failTip = '服务异常，请稍后重试'                          // 标识验证请求结束                          this.$refs.captcha.endRequestVerify(false)                        });                  }              }         });     &lt;/script&gt; }</code></pre> <p>至此，一个完整的滑动验证已实现，开启服务体验吧。</p> <h4 id="配置说明">配置说明</h4> <p>支持配置文件和代码配置，同时配置则代码配置覆盖配置文件。</p> <ul> <li>配置文件</li> </ul> <pre><code class="language-c#">"SlideCaptcha": {     "ExpirySeconds": 60, // 缓存过期时长     "StoreageKeyPrefix": "", // 缓存前缀     "Tolerant": 0.02, // 容错值(校验时用，缺口位置与实际滑动位置匹配容错范围)     "Backgrounds": [ // 背景图配置       {         "Type": "file",         "Data": "wwwroot/images/background/1.jpg"       }     ],     // Templates不配置，则使用默认模板     "Templates": [       {         "Slider": {           "Type": "file",           "Data": "wwwroot/images/template/1/slider.png"         },         "Hole": {           "Type": "file",           "Data": "wwwroot/images/template/1/hole.png"         }       }     ]   }</code></pre> <ul> <li>代码配置</li> </ul> <pre><code class="language-c#">builder.Services.AddSlideCaptcha(builder.Configuration, options =&gt; {     options.Tolerant = 0.02f;     options.StoreageKeyPrefix = "slider-captcha";      options.Backgrounds.Add(new Resource(FileResourceHandler.TYPE, @"wwwroot/images/background/1.jpg"));     options.Templates.Add     (         TemplatePair.Create         (             new Resource(FileResourceHandler.TYPE, @"wwwroot/images/template/1/slider.png"),             new Resource(FileResourceHandler.TYPE, @"wwwroot/images/template/1/hole.png")         )     ); });</code></pre> <h4 id="扩展">扩展</h4> <ol> <li>Template自定义<br /><em><strong>Template</strong></em> 是指用于生成凹槽和拖块的图片，可通过Templates配置节点设置自定义Template。 默认五个<em><strong>Template</strong></em> （不要配置，已经包含在类库内部）如下：</li> </ol> <table> <thead> <tr> <th>slider</th> <th>hole</th> <th>slider</th> <th>hole</th> </tr> </thead> <tbody> <tr> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103627859-1678783935.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103659550-231827453.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103726605-1296193404.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103740845-23696207.png" alt="简单几步实现滑动验证码（后端验证）"></td> </tr> <tr> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103759835-187113611.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103812916-897728605.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103847502-2064096712.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103900535-1184830743.png" alt="简单几步实现滑动验证码（后端验证）"></td> </tr> <tr> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103914668-163959247.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td><img decoding="async" src="https://img2022.cnblogs.com/blog/1409297/202204/1409297-20220404103924414-1967061832.png" alt="简单几步实现滑动验证码（后端验证）"></td> <td></td> <td></td> </tr> </tbody> </table> <p>禁用默认 _<strong>Template</strong>_调用DisableDefaultTemplates即可:</p> <pre><code class="language-c#">builder.Services.AddSlideCaptcha(builder.Configuration)     .DisableDefaultTemplates();</code></pre> <ol start="2"> <li>Validator自定义<br /> 类库提供<em><strong>SimpleValidator</strong></em> ，<em><strong>BasicValidator</strong></em> 两个实现。<br /><em><strong>SimpleValidator</strong></em> 仅位置验证，<strong><em>BasicValidator</em></strong>除位置验证外，同时对轨迹做验证。_<strong>BasicValidator</strong>由于算法的原因，容易误判，因此类库默认用<strong><em>SimpleValidator</em></strong>做为默认<em><strong>Validator</strong></em> 。<br /> 自定义<em><strong>Validator</strong></em> 继承<strong><em>BaseValidator</em></strong> ，<em><strong>BaseValidator</strong></em> 提供了基本的位置验证。</li> </ol> <p>举一个栗子：</p> <pre><code class="language-c#">public class CustomValidator: BaseValidator {     public override bool ValidateCore(SlideTrack slideTrack, CaptchaValidateData captchaValidateData)     {         // BaseValidator已做了基本滑块与凹槽的对齐验证，这里做其他验证          return true;     } }</code></pre> <p>替换默认的Validator</p> <pre><code class="language-c#">builder.Services.AddSlideCaptcha(builder.Configuration);     .ReplaceValidator&lt;CustomValidator&gt;();</code></pre> <ol start="3"> <li>ResourceProvider自定义<br /> 除了通过Options配置Background和Template外，你也可以通过自定义ResourceProvider的形式提供Background和Template。</li> </ol> <pre><code class="language-csharp">public class CustomResourceProvider : IResourceProvider {     public List&lt;Resource&gt; Backgrounds()     {         return Enumerable.Range(1, 10)             .ToList()             .Select(e =&gt; new Resource(Core.Resources.Handler.FileResourceHandler.TYPE, $"wwwroot/images/background/{e}.jpg"))             .ToList();     }          // 这里返回自定义的Template     public List&lt;TemplatePair&gt; Templates()     {         return new List&lt;TemplatePair&gt;();     } }</code></pre> <p>注册ResourceProvider</p> <pre><code class="language-csharp">builder.Services.AddSlideCaptcha(builder.Configuration)     .AddResourceProvider&lt;CustomResourceProvider&gt;();</code></pre> <ol start="4"> <li>自定义ResourceHandler</li> </ol> <pre><code class="language-csharp">public class UrlResourceHandler : IResourceHandler {     public const string Type = "url";      public bool CanHandle(string handlerType)     {         return handlerType == Type;     }      /// &lt;summary&gt;     /// 这里仅演示，仍然从本地读取。实际需要通过Http读取     /// &lt;/summary&gt;     /// &lt;param name="resource"&gt;&lt;/param&gt;     /// &lt;returns&gt;&lt;/returns&gt;     /// &lt;exception cref="ArgumentNullException"&gt;&lt;/exception&gt;     public byte[] Handle(Resource resource)     {         if (resource == null) throw new ArgumentNullException(nameof(resource));         return File.ReadAllBytes(resource.Data);     } }</code></pre> <p>注册ResourceHandler</p> <pre><code class="language-csharp">builder.Services.AddSlideCaptcha(builder.Configuration)     .AddResourceHandler&lt;UrlResourceHandler&gt;();</code></pre> <h4 id="项目参考">项目参考</h4> <p>项目参考了tianai-captcha，vue-drag-verify非常优秀的项目，非常感谢。</p> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-103588.htm">动物疫苗间隔时间多长有效期（动物疫苗注射后多久产生抗体）</a></p>
                                        <p>下一个：<a href="/news/article-104424.htm">宠物之家翻译（宠物之家翻译成中文）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-75351.htm" title="动物疫苗的作用有哪些呢图片视频（动物疫苗的了解）">动物疫苗的作用有哪些呢图片视频（动物疫苗的了解）</a></li>
                        <li class="py-2"><a href="/news/article-73999.htm" title="动物医院哪里好一点 动物医院哪里好一点啊">动物医院哪里好一点 动物医院哪里好一点啊</a></li>
                        <li class="py-2"><a href="/news/article-87232.htm" title="宠物连锁品牌（宠物连锁品牌排行榜单）">宠物连锁品牌（宠物连锁品牌排行榜单）</a></li>
                        <li class="py-2"><a href="/news/article-68751.htm" title="动物防疫站几点关门（动物防疫站周六日上班吗）">动物防疫站几点关门（动物防疫站周六日上班吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-9-node-share-links.htm" title="3月9日→22.2M/S|2025年最新免费节点SSR/Clash/V2ray/Shadowrocket订阅链接地址分享">3月9日→22.2M/S|2025年最新免费节点SSR/Clash/V2ray/Shadowrocket订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-99844.htm" title="动物疫苗审批流程表 动物疫苗审批流程表格">动物疫苗审批流程表 动物疫苗审批流程表格</a></li>
                        <li class="py-2"><a href="/news/article-66211.htm" title="南京免费领养宠物的平台是哪个（南京最大的宠物店免费领养）">南京免费领养宠物的平台是哪个（南京最大的宠物店免费领养）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-6-node-share-links.htm" title="4月6日→20.4M/S|2025年最新免费节点SSR/Clash/Shadowrocket/V2ray订阅链接地址分享">4月6日→20.4M/S|2025年最新免费节点SSR/Clash/Shadowrocket/V2ray订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-23-node-share-links.htm" title="3月23日→20.8M/S|2025年最新免费节点Clash/V2ray/Shadowrocket/SSR订阅链接地址分享">3月23日→20.8M/S|2025年最新免费节点Clash/V2ray/Shadowrocket/SSR订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-10-clash-v2ray-ss-ssr.htm" title="3月10日→20.8M/S|2025年最新免费节点V2ray/Shadowrocket/SSR/Clash订阅链接地址分享">3月10日→20.8M/S|2025年最新免费节点V2ray/Shadowrocket/SSR/Clash订阅链接地址分享</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">80</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">89</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div> <!-- end of container -->
    </div> <!-- end of basic-2 -->
    <!-- end of details 1 -->
        <!-- Copyright -->
    <div class="copyright bg-gray">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    &nbsp;
                </div> <!-- end of col -->
            </div> <!-- enf of row -->
            <div class="row">
                <div class="col-lg-12">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p class="p-small"><a href="/">V2ray X节点订阅官网</a> 版权所有 Powered by WordPress</p>
                </div> <!-- end of col -->
            </div> <!-- enf of row -->
        </div> <!-- end of container -->
    </div> <!-- end of copyright -->
    <!-- end of copyright -->
    <!-- Back To Top Button -->
    <button onclick="topFunction()" id="myBtn">
        <img src="/assets/website/img/v2rayx/up-arrow.png" alt="alternative">
    </button>
    <!-- end of back to top button -->
    <!-- Scripts -->
    <script src="/assets/website/js/frontend/v2rayx/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/v2rayx/bootstrap.min.js"></script> <!-- Bootstrap framework -->
    <script src="/assets/website/js/frontend/v2rayx/swiper.min.js"></script> <!-- Swiper for image and text sliders -->
    <script src="/assets/website/js/frontend/v2rayx/purecounter.min.js"></script> <!-- Purecounter counter for statistics numbers -->
    <script src="/assets/website/js/frontend/v2rayx/scripts.js"></script> <!-- Custom scripts -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>